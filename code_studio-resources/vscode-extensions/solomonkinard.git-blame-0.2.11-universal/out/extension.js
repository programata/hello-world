"use strict";var gs=Object.create;var Oe=Object.defineProperty;var vs=Object.getOwnPropertyDescriptor;var ws=Object.getOwnPropertyNames;var bs=Object.getPrototypeOf,Cs=Object.prototype.hasOwnProperty;var Ts=(t,e)=>{for(var i in e)Oe(t,i,{get:e[i],enumerable:!0})},ri=(t,e,i,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of ws(e))!Cs.call(t,o)&&o!==i&&Oe(t,o,{get:()=>e[o],enumerable:!(s=vs(e,o))||s.enumerable});return t};var C=(t,e,i)=>(i=t!=null?gs(bs(t)):{},ri(e||!t||!t.__esModule?Oe(i,"default",{value:t,enumerable:!0}):i,t)),xs=t=>ri(Oe({},"__esModule",{value:!0}),t);var Eo={};Ts(Eo,{activate:()=>So,deactivate:()=>Io});module.exports=xs(Eo);var S=C(require("vscode"));var ie=C(require("vscode")),hi=C(require("child_process"));var di=C(require("child_process"));var bt=C(require("vscode")),Qe=C(require("child_process"));function ni(){let t="git",e="vscode.git";if(bt.extensions.all.some((i,s,o)=>i.id==e&&i.isActive)){let i=bt.extensions.getExtension(e);i?.exports.enabled&&(t=i.exports.getAPI(1).git.path)}return t}function P(t){let e=["rev-parse","--show-toplevel"],[i,s,o]=_(t,e),r=Qe.spawnSync(i,s,o);return r.status==0&&r.stderr==""?r.stdout.trim():(console.warn("Error: Couldn't find top level directory",r.status,r.error),"")}function ai(t){let e=new Map;return t&&t.split(`
`).map(i=>{let s=i.indexOf(" "),o=i.substring(0,s),r=i.substring(s+1);e.set(o,r)}),e}function ci(t){return new Promise((e,i)=>{let s="";t.query&&(s=JSON.parse(t.query).ref);let o=2,r=["log","-M",`-${o}`,"--follow","--name-only","--format=%H",s,"--",`"${t.fsPath}"`],[n,a,c]=_(t,r),d="",u=Qe.spawn(n,a,c);u.stdout.on("data",m=>{let p=m.toString().trim().split(`
`),f=p[0];if(!new RegExp(/^[0-9a-fA-F]{40}$/).test(f)){i();return}if(o--,o>0){d=p[p.length-1];return}let w="";if(w==d)w=t.fsPath;else{let D=p[p.length-1];w=`${P(t)}/${D}`}e({sha:f,fsPath:w})}),u.on("error",m=>console.log("error",m)),u.on("exit",(m,l)=>{})})}var mi=require("path"),Ds=require("os");function _(t,e){let i=ni(),s,o={cwd:__dirname,encoding:"utf8",shell:!0};return s=["-C",`"${mi.dirname(t.fsPath)}"`,...e],Ds.platform()==="win32"&&(i="cmd",s=["/s","/c","git",...s],o.cwd=mi.dirname(t.fsPath)),[i,s,o]}function Ne(t,e){return new Promise((i,s)=>{let[o,r,n]=_(t,e),a=di.spawn(o,r,n),c="";a.on("error",d=>console.log("error",d)),a.on("exit",(d,u)=>{i(c)}),a.stdout.on("data",d=>c+=d.toString())})}var Me=class{constructor(e,i,s,o,r,n,a){this.sha=e,this.date=i,this.author=s,this.mail=o,this.summary=r,this.previous=n,this.filename=a}};var N={prefix:"",showStatusBar:!0};var I=C(require("vscode")),Dt=C(require("child_process"));var qe=C(require("vscode"));function ui(){return Le("gitWebUrl")??""}function Le(t){return Ps().get(t)}function je(){qe.commands.executeCommand("workbench.action.openSettings","Git Blame")}function Ps(){return qe.workspace.getConfiguration(N.prefix)}function ne(t){let e=xt(t);return Tt(e)}function Tt(t){let e="";if(!t)return e;let i=t.getMonth()+1,s=t.getFullYear(),o=t.getDate(),r=(n,a)=>n>a?n.toString():`0${n.toString()}`;return e=`${s}-${r(i,9)}-${r(o,9)} `,e}function xt(t){if(!!t)return new Date(parseInt(t+"000"))}var Te=C(require("vscode"));function ys(t){return!(!t||t==null||t=="")}async function He(t){let e=ui();if(!ys(e)){Te.window.showInformationMessage("Url?","Settings").then(i=>{i=="Settings"&&je()});return}e=e.replace("$ID",t),Te.env.openExternal(Te.Uri.parse(e))}var M=C(require("vscode"));var Ue=C(require("vscode")),ks=require("path"),xe=class{static showPatch(e,i){let s=Ue.Uri.from({scheme:"git-blame.gitAnywhere",path:e,query:JSON.stringify({path:e,ref:i})}),o=Ue.Uri.from({scheme:"git-blame.gitAnywhere",path:e,query:JSON.stringify({path:e,ref:`${i}^`})}),r=`${ks.basename(s.fsPath)} (patch)`;Ue.commands.executeCommand("vscode.diff",o,s,r)}};var Je=require("path");function ae(t,e,i,s,o){switch(o){case"File":{let r=Je.join(t,s);M.workspace.openTextDocument(M.Uri.parse(r)).then(n=>M.window.showTextDocument(n).then(a=>{}));break}case"Patch":{let r=Je.join(t,s);xe.showPatch(r,i);break}case"Diff":{let r=Je.join(t,s),n=e.fsPath,a="";e.query&&(a=JSON.parse(e.query).ref);let c;a===""?c=e:c=M.Uri.from({scheme:"git-blame.gitAnywhere",path:n,query:JSON.stringify({path:n,ref:a})});let d=M.Uri.from({scheme:"git-blame.gitAnywhere",path:r,query:JSON.stringify({path:r,ref:i})}),u=`${Je.basename(c.fsPath)} (diff)`;M.commands.executeCommand("vscode.diff",d,c,u);break}case"Full Patch":{let r=Date.now(),n=JSON.stringify({ref:i,ts:r,fsPath:e.fsPath}),a=M.Uri.from({scheme:"git-blame.provider.fullPatch",path:".diff",query:n});M.workspace.openTextDocument(a).then(c=>{M.window.showTextDocument(c).then(d=>{})});break}}}var We=require("path");function _s(t,e){let i=Date.now(),s=JSON.stringify({ref:e,ts:i,fsPath:t}),o=I.Uri.from({scheme:`${N.prefix}.gitDiff`,path:".diff",query:s});I.workspace.openTextDocument(o).then(r=>{I.window.showTextDocument(r).then(n=>{})})}async function ce(t,e){let i=t.document.uri;H({sha:e},i,!1)}async function H(t,e,i=!0){if(!t.sha)return;let s=I.window.createQuickPick();s.show(),s.busy=!0,s.placeholder=`commit ${t.sha}`;let o=[];o.push({label:ne(t?.date)??""}),o.push({label:`${t.author} ${t.mail}`??""}),o.push({label:t.sha??""}),o.push({label:t.summary??""}),s.items=o;let r=new Map,n=(h,v)=>{let b=I.Uri.from({scheme:"git-blame.gitAnywhere",path:v,query:JSON.stringify({path:v,ref:h})}),x=`${e.path.split("/").pop()} (${h.slice(0,8)})`;I.commands.executeCommand("vscode.diff",e,b,x)},a=h=>{if(!h.previous)return;let[v,...b]=h.previous.split(" "),x=P(e);if(!x)return;let y=We.join(x,b.join(" "));return{sha:v,fsPath:y}},c=h=>{let v=a(h);if(!v)return;let b=v.sha,x=v.fsPath;n(b,x)},d="$(debug-breakpoint-data-unverified)",u=new Map([["web",{label:`${d} Open Online`,callback:()=>{He(t.sha)}}],["diffFileFromPrevious",{label:`${d} Diff that caused this line`,callback:async()=>{let h=P(e);if(!h||!t.filename)return;let v=We.join(h,t.filename),b=t.sha,x=I.Uri.from({scheme:"git-blame.gitAnywhere",path:v,query:JSON.stringify({path:v,ref:b,topLevelGitDir:h})}),y=a(t);y&&(v=y.fsPath);let E=I.Uri.from({scheme:"git-blame.gitAnywhere",path:v,query:JSON.stringify({path:v,ref:`${b}^`,topLevelGitDir:h})}),A=We.basename(x.fsPath);I.commands.executeCommand("vscode.diff",E,x,A)}}],["diffAllFilesFromPrevious",{label:`${d} Diff all files that caused this line`,callback:()=>{_s(e.fsPath,t.sha)}}],["message",{label:`${d} Copy commit message to clipboard`,callback:()=>{let h=r.get(t.sha);!h||I.env.clipboard.writeText(h)}}],["id",{label:`${d} Copy commit id to clipboard`,callback:()=>{let h=t.sha;I.env.clipboard.writeText(h)}}],["previousLineHistory",{label:`${d} Previous line history`,callback:()=>{c(t)}}],["previousFileHistory",{label:`${d} Previous file history`,callback:()=>{ci(e).then(h=>{n(h.sha,h.fsPath)})}}],["filesByAuthor",{label:`${d} Get files by author`,callback:()=>{let h=v=>{if(!v)return;let b=I.window.createQuickPick();b.busy=!0,b.show(),b.keepScrollPosition=!0;let x=[];x.push({label:`${d} Author?`,description:v}),x.push({label:"",kind:I.QuickPickItemKind.Separator});let y;b.onDidHide(()=>{y.killed||y.kill(),b.dispose()}),b.onDidChangeSelection(B=>{if(B[0].label==`${d} Author?`){I.window.showInputBox().then(le=>h(le));return}let Ce=P(e);if(!Ce)return;let Ee=We.join(Ce,B[0].label);I.workspace.openTextDocument(Ee).then(le=>{I.window.showTextDocument(le).then(Lo=>{})})});let E=["log",`--author="${v}"`,'--format=""',"--name-only"],[A,L,U]=_(e,E);y=Dt.spawn(A,L,U),y.on("error",B=>console.log("error",B)),y.on("exit",(B,Ce)=>{x[0].description+=` (${x.length-1} files)`,setTimeout(()=>b.items=x),b.busy=!1});let j=new Set;j.add(""),y.stdout.on("data",B=>{let Ee=B.toString().split(`
`);for(let le of Ee)j.has(le)||(j.add(le),x.push({label:le}));setTimeout(()=>b.items=x)})};h(t.author)}}],["diffWorkingTree",{label:`${d} Diff working tree`,callback:()=>{let h=Date.now(),v=JSON.stringify({ts:h}),b=`${N.prefix}.diffWorkingTree`,x=".diff",y=v,E=I.Uri.from({scheme:b,path:x,query:y});I.workspace.openTextDocument(E).then(A=>{I.window.showTextDocument(A).then(L=>{})})}}],["settings",{label:`${d} Settings`,callback:()=>{je()}}]]);s.onDidChangeSelection(h=>{let v=h[0].label,b=new Map;for(let[L,U]of u)b.set(U.label,L);if(b.has(v)){s.dispose();let L=b.get(v),U=u.get(L);U?.callback&&U.callback();return}let x,y=Le("config.logClickUrls");if(y){let L=JSON.parse(JSON.stringify(y));for(let U in L){if(x=v.match(U),!x||x.length<2)continue;let B=L[U].replace("$1",x[1]);I.env.openExternal(B),s.dispose();return}}let E=h[0].filename;if(E){let L=P(e);if(!L)return;ae(L,e,t.sha,E,"Patch")}s.value=v;let A=v.match(/https?\:\/\/[^\s]+/);A&&I.env.openExternal(I.Uri.parse(A[0]))});let l=["log","-1",'--pretty="Author: %an <%ae>\\nDate: %ad\\n\\n%B"',"--numstat","--no-decorate",t.sha],[p,f,g]=_(e,l),w=Dt.spawn(p,f,g);w.on("error",h=>console.log("error",h)),w.on("exit",(h,v)=>{s.busy=!1});let D=`commit ${t.sha}
`,k=new RegExp(/^(\d+|-)\s+(\d+|-)\s+(.*)$/);w.stdout.on("data",h=>{D+=h.toString()}),w.stdout.on("end",()=>{D=D.replaceAll("\\n",`
`),r.set(t.sha,D);let h=D.split(`
`);o=[];let v={files:0,plus:0,minus:0},b;for(let x of h){let y,E=[],A,L=x.match(k);if(L){let U=L[1],j=L[2];b=L[3],y=b,A=b?`+${U} -${j}`:void 0,v.files++,v.plus+=isNaN(Number(U))?0:Number(U),v.minus+=isNaN(Number(j))?0:Number(j);let B=(Ce,Ee)=>{E.push({iconPath:Ce,tooltip:Ee})};B(new I.ThemeIcon("go-to-file"),"File"),B(new I.ThemeIcon("diff"),"Patch"),B(new I.ThemeIcon("compare-changes"),"Diff")}else y=x.trim();y==""&&o[o.length-1].label==y||o.push({label:y,description:A,buttons:E,filename:b})}o[o.length-1].label===""&&o.pop();{let x=v.files!==1?"files":"file";x=`${v.files} ${x}`;let y=[{iconPath:new I.ThemeIcon("diff"),tooltip:"Full Patch"}];o.push({label:x,description:`+${v.plus} -${v.minus}`,buttons:y})}if(i){o[o.length-1].label!=""&&o.push({label:""}),o.push({label:"",kind:I.QuickPickItemKind.Separator});for(let[x,y]of u)o.push({label:y.label})}s.onDidTriggerItemButton(x=>{if(!x.button.tooltip)return;let y=P(e);!y||ae(y,e,t.sha,x.item.label,x.button.tooltip)}),s.items=o,s.busy=!1})}var li=C(require("vscode")),fe=class{constructor(e){this.maplineToSha=new Map;this.mapShaToCommit=new Map;this.uri=e}static async getFileStat(e){return await li.workspace.fs.stat(e)}equals(e){return this.uri.toString()==e.uri.toString()&&this.fileStat?.mtime==e.fileStat?.mtime&&this.fileStat?.size==e.fileStat?.size}};var ze=class{constructor(){this.maxFiles=30;this.files=new Map}set(e){let i=e.uri.toString(),s=e;this.files.has(i)&&(s=this.files.get(i),this.files.delete(i)),this.files.set(i,s),this.maybeEvict()}get(e){let i=e.toString();if(!this.files.has(i))return;let s=this.files.get(i);return this.files.delete(i),this.files.set(i,s),s}maybeEvict(){if(this.files.size>this.maxFiles)for(let[e,i]of this.files){this.files.delete(e);break}}};var $;function Ke(){$||($=new $e),$.clearData()}async function pi(t){if($||($=new $e),t.document.isDirty){let e=t.document.getText();$.prevDirtyText!==e&&($.clearData(),$.prevDirtyText=e,await $.mapLinesToCommits(t))}else($.isChangedFile(t.document.uri)||$.prevDirtyText!==void 0)&&($.prevDirtyText=void 0,$.clearData(),await $.mapLinesToCommits(t));gi(t)}function gi(t){let e=t.selection.active.line+1,i=$.getCommitForLine(e);if(!i){he.notify(Z.names.onShaForCurrentLine,[]);return}let o=`${ne(i?.date)}${i?.author}`;ie.commands.executeCommand(`${N.prefix}.setStatus`,o,i.summary),he.notify(Z.names.onShaForCurrentLine,[i.sha])}function vi(t){$||($=new $e);let e=t.selection.active.line+1,i=$.getCommitForLine(e);if(i?.sha!="0".repeat(40)&&!!i)return i}function Pt(t){let e=vi(t);if(!!e)return e.sha}function yt(t){let e=vi(t);!e||H(e,t.document.uri)}var $e=class{constructor(){this.line=0;this.recentLineUpdated=-1;this.maplineToSha_=new Map;this.mapShaToCommit_=new Map}getCommitForLine(e){let i=this.maplineToSha_.get(e);if(i)return this.mapShaToCommit_.get(i)}clearData(){delete this.uri,this.maplineToSha_.clear(),this.mapShaToCommit_.clear()}setData(e,i,s){this.uri=e,this.maplineToSha_=i,this.mapShaToCommit_=s}getData(){return[this.uri,this.maplineToSha_,this.mapShaToCommit_]}isChangedFile(e){return this.uri?!(this.uri.toString()==e.toString()&&this.uri.query==e.query):!0}async mapLinesToCommits(e){if(this.uri===e.document.uri)return;this.uri=e.document.uri,this.recentLineUpdated=-1;let i=s=>{let o=s.toString(),r=new RegExp(/(^[0-9a-fA-F]{40})\s(\d+)\s(\d+)\s(\d+)$/gm),n=Array.from(o.matchAll(r));for(let c=0;c<n.length;c++){let[d,u,m,l,p]=n[c];if(!this.mapShaToCommit_.has(u)){let w=n[c].index||0,D=n[c].input?.length||0;c+1<n.length&&(D=n[c+1].index||0);let k=n[c].input?.slice(w,D),h=ai(k),v=h.get("author"),b=h.get("author-time"),x=h.get("author-mail"),y=h.get("summary"),E=h.get("previous"),A=h.get("filename"),L=new Me(u,b,v,x,y,E,A);this.mapShaToCommit_.set(u,L)}let f=parseInt(l),g=f+parseInt(p)-1;for(let w=f;w<=g;w++)this.maplineToSha_.set(w,u)}let a=e.selection.active.line+1;a!=this.recentLineUpdated&&this.maplineToSha_.has(a)&&(this.recentLineUpdated=a,gi(e))};await Ss(e.document.uri,i)}},me;async function Ss(t,e){let i=fi.get(t);if(typeof i<"u"){let u=new fe(t);if(u.fileStat=await fe.getFileStat(u.uri),u.equals(i)&&!ie.window.activeTextEditor?.document.isDirty){me&&!me.killed&&me.kill(),$.setData(t,new Map(i.maplineToSha),new Map(i.mapShaToCommit));let m=[];for(let[p,f]of i.maplineToSha)m[Number(p)-1]=f;he.notify(Z.names.onShaListingIndexedByLine,m);let l=m.filter((p,f,g)=>g.indexOf(p)===f);he.notify(Z.names.onAllShasForFile,l);return}}let s="";t.query&&(s=JSON.parse(t.query).ref);let o=ie.window.activeTextEditor?.document.isDirty,r=["blame","--incremental"];if(!o)r.push(s,"--",`"${t.fsPath}"`);else{if(s!==""){me.kill();return}r.push(`"${t.fsPath}"`,"--contents","-")}let[n,a,c]=_(t,r),d=()=>{let u=hi.spawn(n,a,c);if(o&&ie.window.activeTextEditor){let m=ie.window.activeTextEditor.document.getText();u.stdin.write(m),u.stdin.end()}return u.stdout.on("data",m=>e(m)),u.on("error",m=>console.log("error",m)),u.on("exit",(m,l)=>{if(l=="SIGTERM"||m==null||m!=0)return;let[p,f,g]=$.getData(),w=new fe(t);fe.getFileStat(w.uri).then(h=>{w.fileStat=h,w.mapShaToCommit=new Map(g),w.maplineToSha=new Map(f),fi.set(w)}).catch(()=>{});let D=[];for(let[h,v]of f)D[Number(h)-1]=v;let k=D.filter((h,v,b)=>b.indexOf(h)===v);he.notify(Z.names.onAllShasForFile,k),he.notify(Z.names.onShaListingIndexedByLine,D)}),u};me&&!me.killed&&me.kill(),me=d()}function wi(){let[t,e,i]=$.getData();return Array.from(e.values()).filter((r,n,a)=>a.indexOf(r)===n)}function bi(){let[t,e,i]=$.getData();return i}var fi=new ze;function Ci(t){let e=t.document.uri.with({fragment:"next",query:JSON.stringify({ts:Date.now()})});ie.window.showTextDocument(e)}function Ti(t){let e=t.document.uri.with({fragment:"prev",query:JSON.stringify({ts:Date.now()})});ie.window.showTextDocument(e)}var Z=class{constructor(){this.observers_=new Map}notify(e,i){if(!!this.observers_.has(e))for(let s of this.observers_.get(e))setTimeout(()=>s(i),0)}register(e,i){let s=[];this.observers_.has(e)&&(s=this.observers_.get(e)),s.push(i),this.observers_.set(e,s)}};Z.names=Object.freeze({onShaForCurrentLine:"onShaForCurrentLine",onAllShasForFile:"onAllShasForFile",onShaListingIndexedByLine:"onShaListingIndexedByLine"});var he=new Z;function Ze(t,e){he.register(t,e)}var Pe=C(require("vscode")),xi=C(require("child_process"));var De=class{constructor(){this.onDidChange_=new Pe.EventEmitter;this.onDidChange=this.onDidChange_.event;this.index_=0;this.chunk_=1e6;this.text_="";this.isProcessing_=!1}getChunk(){return this.text_.slice(this.index_,this.index_+this.chunk_)}provideTextDocumentContent(e){return new Promise(async(i,s)=>{switch(e.fragment){case"next":{let o=this.index_;this.index_+=this.chunk_;let r=this.getChunk();if(r==""){this.index_=o,s();return}i(r)}case"prev":{if(this.index_-=this.chunk_,this.index_<0){this.index_=0,s();return}i(this.getChunk())}case"start":{i(this.getChunk());return}default:if(!this.isProcessing_){this.text_="",this.index_=0,await this.process(e);let o=e.with({fragment:"start",query:JSON.stringify({ts:Date.now()})});Pe.window.showTextDocument(o)}}})}async process(e){return new Promise((i,s)=>{this.isProcessing_=!0;let o=JSON.parse(e.query),r=o.ref,n=["diff",`${r}^`,`${r}`,"-U0"],a=Pe.Uri.parse(o.fsPath),[c,d,u]=_(a,n),m=xi.spawn(c,d,u);m.on("error",l=>{console.log("error",l),this.isProcessing_=!1,s()}),m.on("exit",(l,p)=>{this.isProcessing_=!1,i(void 0)}),m.stdout.on("data",l=>{this.text_+=l.toString()})})}};var Ae=C(require("vscode")),kt=C(require("child_process"));var Ye=class{constructor(){this.onDidChange_=new Ae.EventEmitter;this.onDidChange=this.onDidChange_.event;this.index_=0;this.chunk_=1e8;this.text_="";this.isProcessing_=!1}getChunk(){return this.text_.slice(this.index_,this.index_+this.chunk_)}provideTextDocumentContent(e){return new Promise(async(i,s)=>{switch(e.fragment){case"start":{i(this.getChunk());return}default:if(!this.isProcessing_){this.text_="",this.index_=0,await this.process(e);let o=e.with({fragment:"start",query:JSON.stringify({ts:Date.now()})});Ae.window.showTextDocument(o)}}})}async process(e){return new Promise((i,s)=>{this.isProcessing_=!0;let o=Ae.window.activeTextEditor?.document.uri;if(!o){i(void 0);return}let r=P(o);if(!!r){{let n=["diff","-U0","@"],[a,c,d]=_(o,n);this.text_+=kt.spawnSync(a,c,d).stdout}{let n=[`ls-files -o --exclude-standard -z | xargs -I FILE -0 -n 1 git --no-pager diff /dev/null ${r}/FILE`],[a,c,d]=_(o,n);this.text_+=kt.spawnSync(a,c,d).stdout}i(void 0),this.isProcessing_=!1}})}};var z=C(require("vscode"));var Fe=C(require("vscode"));var et=C(require("vscode")),_t=class extends et.TreeItem{constructor(e,i){super(e),this.description=i,this.contextValue="author"}},Xe=class{constructor(){this._onDidChangeTreeData=new et.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>this.hasRefreshed_?i(this.authors_):i([]))}refresh(e){this.authors_=e.map(i=>new _t(i.name,i.email)),this.hasRefreshed_||(this.hasRefreshed_=!0),this._onDidChangeTreeData.fire()}};function Di(t){let e=new Xe,i=Fe.window.createTreeView("git-blame.views.author",{treeDataProvider:e});t.subscriptions.push(Fe.commands.registerTextEditorCommand("git-blame.views.authors.refresh",async s=>{if(!i.visible)return;let o=await Fe.commands.executeCommand("git-blame.commands.getAllCommits"),r=[];for(let[a,c]of o){let d=c.mail,u=d?.slice(d.indexOf("<")+1,d.indexOf(">"));r.push({name:c.author??"",email:u??""})}let n=new Map;for(let a of r)n.has(a.email)||n.set(a.email,a);e.refresh(Array.from(n.values()))}))}var se=C(require("vscode"));var Pi=C(require("child_process")),St=C(require("vscode"));function Ls(t){if(!t||t===""){St.commands.executeCommand("git-blame.commands.appendLineToOutputChannel","<Git Blame: Ok>");return}St.commands.executeCommand("git-blame.commands.appendLineToOutputChannel",t)}var F=class{static async run(e,i,s=!1){return new Promise((o,r)=>{let[n,a,c]=_(i,e),d=Pi.spawn(n,a,c),u=[];d.on("exit",(m,l)=>{let p=u.join("");o(p),s&&Ls(p)}),d.stdout.on("data",m=>u.push(m.toString())),d.on("error",m=>r())})}};var yi=C(require("child_process")),Q=C(require("vscode"));var R=class{constructor(e){!new RegExp(/^[0-9a-fA-F]{40}$/).test(e)||(this.sha=e)}getSha(){return this.sha}};var It=require("path");async function Us(t,e,i,s){return new Promise(async(o,r)=>{let n=t.getSha();if(!n)return o(void 0);(!s||s.length===0)&&(s=`${n}^`);let a=["diff","--format=''","--name-only",s,n],c=await F.run(a,e);if(!c)return o(void 0);let d=new RegExp(/(.+)/s),u=c.match(d);if(!u)return o(void 0);let[m,l]=u,p=l.trim().split(`
`).filter(g=>g!=="").map(g=>new Lt(g,i,n,s)),f=new Et(p);o(f)})}var Et=class extends Q.TreeItem{constructor(i){super("");this.contextValue="commit",i.length>0&&(this.collapsibleState=Q.TreeItemCollapsibleState.Collapsed),this.files=i}},Lt=class extends Q.TreeItem{constructor(i,s,o,r){super(It.basename(i));this.description=It.dirname(i),this.resourceUri=Q.Uri.parse(It.join(s,i)),this.sha=o;let n={fsPath:this.resourceUri.fsPath,sha:r},a={fsPath:this.resourceUri.fsPath,sha:this.sha};this.command={title:"Diff",command:"git-blame.treeView.showDiff",arguments:[n,a]},this.contextValue="file"}},Ut=class extends Q.TreeItem{constructor(i,s,o,r){super(s);this.contextValue="branch",this.collapsibleState=Q.TreeItemCollapsibleState.Collapsed,this.sha=new R(i),this.name=s,this.date=o,this.summary=r,this.description=o,this.tooltip=r}},tt=class{constructor(){this._onDidChangeTreeData=new Q.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1;this.uri_=Q.Uri.parse("")}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.hasRefreshed_)return i([]);if(e){let o=e;if(!o.sha.getSha())return i([]);let n=await Us(o.sha,this.uri_,this.getTopLevelGitDir(),this.base??"");return i(n?n.files:[])}this.getBranch().then(o=>i(o))})}refresh(e){this.uri_=e,this.topLevelGitDir_=P(e),this.topLevelGitDir_&&(this.hasRefreshed_=!0,this._onDidChangeTreeData.fire())}async getBranch(){return new Promise((e,i)=>{let s=Q.window.activeTextEditor?.document.uri;if(!s)return e([]);let o=["branch",'--format="%(objectname)	%(refname:short)	%(authordate:short)	%(subject)"',"--sort=-authordate"],[r,n,a]=_(s,o),c=yi.spawn(r,n,a),d="";c.on("error",u=>{i()}),c.on("exit",(u,m)=>{let l=[],p=new RegExp(/^([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)$/gm),f=d.matchAll(p);if(!!f){for(let g of f){let[w,D,k,h,v]=g,b=new Ut(D,k,h,v);l.push(b)}e(l)}}),c.stdout.on("data",u=>d+=u.toString())})}openLog(e,i){H({sha:e},i)}getUri(){return this.uri_}getTopLevelGitDir(){return this.topLevelGitDir_}setBase(e){this.base=e}getBase(){return this.base}};var Re=C(require("vscode"));var it=class{constructor(e,i){let s="git-blame.storage.";this.key_=`${s}.${e}`,this.context_=i,this.map_=this.loadDataFromKeyForMap(this.key_),this.update()}loadDataFromKeyForMap(e){let i=this.context_.workspaceState.get(e);typeof i!="string"&&(i="{}");let s;try{s=JSON.parse(i)}catch{s="{}"}return new Map(Object.entries(s))}visit(e){this.delete(e),this.map_.set(e,Date.now()),this.update()}update(){let e=JSON.stringify(Object.fromEntries(this.map_));this.context_.workspaceState.update(this.key_,e)}delete(e){this.map_.delete(e),this.update()}keys(){return[...this.map_.keys()].reverse()}};function ki(t,e){return e.keys().map(i=>({label:i,buttons:t}))}async function de(t,e){return new Promise((i,s)=>{let o=new it(e.key,t),r=Re.window.createQuickPick();r.busy=!0,r.show(),r.title=e.title,r.placeholder=e.placeholder;let n=[],a=(c,d)=>{n.push({iconPath:c,tooltip:d})};a(new Re.ThemeIcon("pencil"),"Edit"),a(new Re.ThemeIcon("close"),"Remove"),r.items=ki(n,o),r.busy=!1,r.onDidTriggerItemButton(c=>{switch(c.button.tooltip){case"Edit":{r.value=c.item.label;break}case"Remove":{o.delete(c.item.label),r.items=ki(n,o);break}}}),r.onDidAccept(()=>{r.hide();let c=r.value;r.value===""&&r.activeItems.length>0&&(c=r.activeItems[0].label),c&&c!==""&&!new RegExp(/^\s+$/).test(c)&&o.visit(c),i(c)}),r.onDidHide(()=>r.dispose())})}var $s=require("path");function $t(t){se.commands.executeCommand("git-blame.commands.appendLineToOutputChannel",t)}function _i(t){let e=new tt,i=se.window.createTreeView("gitBlameBranchView",{treeDataProvider:e});t.subscriptions.push(se.commands.registerTextEditorCommand("git-blame.branchView.base",async s=>{let o=e.getBase()??"",r=await de(t,{key:"branchView.diff.base",title:"Base ref?",placeholder:o});typeof r>"u"||(e.setBase(r),e.refresh(s.document.uri))})),t.subscriptions.push(se.commands.registerTextEditorCommand("git-blame.branchView.refresh",s=>{!i.visible||e.refresh(s.document.uri)})),t.subscriptions.push(se.commands.registerCommand("git-blame.branchView.openArtifact",s=>{let o=s.resourceUri,r=s.sha,n=o.with({scheme:"git-blame.gitAnywhere",query:JSON.stringify({ref:r,path:o.fsPath})}),a=`${$s.basename(n.fsPath)} ${r.slice(0,3)}`;se.commands.executeCommand("vscode.open",n,{},a)})),t.subscriptions.push(se.commands.registerTextEditorCommand("git-blame.branchView.checkout",async(s,o,r)=>{if(!i.visible)return;let n=r.name,a=["checkout",n];$t(`Branch: Changing to branch: ${n}`);let c=await F.run(a,s.document.uri);c&&c.length>0?$t(c):$t(`Branch: Changed to branch: ${n}`)}))}var T=C(require("vscode"));var oe=C(require("vscode"));var Si=require("path"),st=class{constructor(){this._onDidChangeTreeData=new oe.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.topLevelGitDir_="";this.files_=[];this.ref_="@^";oe.commands.executeCommand("git-blame.diff.getRef").then(e=>this.ref_=e)}getTreeItem(e){return e}getChildren(e){return this.files_?this.files_.map(i=>{let s=Si.basename(i),o=new oe.TreeItem(s);return o.description=i,o.resourceUri=oe.Uri.parse(`${this.topLevelGitDir_}/${o.description}`),o.command={command:"git-blame.diffView.diffFile",title:"Diff",arguments:[o,this.ref_]},o}):null}async refresh(e){let i=this.ref_,s=e.document.uri,o=P(s);if(!o)return;this.topLevelGitDir_=o;let r;r=["diff","--raw",i],await this.processRaw(s,r),r=["ls-files","--others","--exclude-standard"],await this.processSimple(s,r)}reset(){this.files_=[],this.topLevelGitDir_="",this._onDidChangeTreeData.fire()}getRef(){return this.ref_}setRef(e){e&&(typeof e!="string"||/\s/.test(e))||(this.ref_=e)}async processWithTopLevelUri(e,i){return new Promise(async(s,o)=>{let r=P(e);if(!r)return s("");let n=oe.Uri.parse(Si.join(r,"thisStubIsNeeded")),a=await Ne(n,i);return s(a)})}update(e){e.length!=0&&(this.files_.push(...e),this._onDidChangeTreeData.fire())}async processSimple(e,i){return new Promise(async(s,o)=>{let n=(await this.processWithTopLevelUri(e,i)).split(`
`).filter(a=>a!=="");this.update(n),s()})}async processRaw(e,i){return new Promise(async(s,o)=>{let r=await this.processWithTopLevelUri(e,i),n=/^:\d+ \d+ [0-9a-zA-Z]+ [0-9a-zA-Z]+ [0-9a-zA-Z]+\t([^\t\n]+)(?:\t([^\n]+))?$/gm,a=Array.from(r.matchAll(n)),c=[];for(let d of a)c.push(d[1]),!(typeof d[2]>"u")&&c.push(d[2]);this.update(c),s()})}};var Ii=C(require("vscode"));var Rs=require("path"),ot=class{async provideTextDocumentContent(e,i){return new Promise(async s=>{let o=JSON.parse(e.query),r=o.ref,n;if("topLevelGitDir"in o?n=o.topLevelGitDir:n=P(e),!n)return;let a=Ii.Uri.parse(Rs.join(n,"stub")),c=e.fsPath.substring(n.length+1);s(await F.run(["show",`${r}:${c}`],a))})}};var rt=class{constructor(){this.isProcessing_=!1}async call(e){this.isProcessing_||(this.isProcessing_=!0,await e(),this.isProcessing_=!1)}};var pe=require("path");function Gs(t){let e=P(T.Uri.parse(t.uri.path));if(!e)return[];let i=/^(?:(?<prefix1>\+{3} b\/)(?<filename>.*))|(?:(?<prefix2>@@ -[^\s]+ \+)(?<line>\d+).*)|(?:^(?<change>[\+-])(?:[^\+-]{2}?.*|$))$/gm,s=t.getText().matchAll(i),o=[],r,n,a=!0;for(let c of s){if(!c.index||!c.groups)continue;let d,u;if(c.groups.filename&&c.groups.prefix1){let f=c.index;r=c.groups.filename;let g=f+c.groups.prefix1.length;d=t.positionAt(g),u=t.positionAt(g+r.length),n=void 0}else if(c.groups.line&&c.groups.prefix2){if(!r)continue;let f=c.index;n=c.groups.line;let g=f+c.groups.prefix2.length;d=t.positionAt(g),u=t.positionAt(g+n.length),a=!0}else{if(!r)continue;let f=c.index;if(c.groups.change==="+"){let g=Number(n);a?(n=`${g}`,a=!1):n=`${g+1}`}d=t.positionAt(f),u=t.positionAt(f+1)}if(!d||!u||!r)continue;let m=new T.Range(d,u),l,p=pe.join(e,r);if(n){let f="git-blame.textDocumentContentProvider.diffFsPathToline",g=JSON.stringify({line:n,fsPath:p});l=T.Uri.file(p).with({scheme:f,query:g})}else l=T.Uri.file(p);o.push(new T.DocumentLink(m,l)),d=void 0,u=void 0}return o}function Ei(t,e){if(!t||!e)return;let i=t.with({scheme:"git-blame.gitAnywhere",path:t.fsPath,query:JSON.stringify({path:t.fsPath,ref:e})}),s=`${pe.basename(t.fsPath)} (diff)`;T.workspace.fs.stat(t).then(()=>T.commands.executeCommand("vscode.diff",i,t,s),()=>{T.workspace.openTextDocument(i).then(o=>T.window.showTextDocument(o))})}var At=class{provideDocumentLinks(e,i){return Gs(e)}};function Li(t){let e=new st,i=T.window.createTreeView("gitBlameDiffView",{treeDataProvider:e}),s=new rt;t.subscriptions.push(T.commands.registerCommand("git-blame.diffView.refresh",()=>{if(!i.visible)return;e.reset();let n=T.window.activeTextEditor;!n||s.call(async()=>{await e.refresh(n)})})),t.subscriptions.push(T.commands.registerCommand("git-blame.diffView.showFile",n=>{let a=T.Uri.parse(`${n.resourceUri}`);T.workspace.openTextDocument(a).then(c=>T.window.showTextDocument(c))})),t.subscriptions.push(T.commands.registerCommand("git-blame.diffView.diffFile",(n,a="@^")=>{Ei(n.resourceUri,a)})),t.subscriptions.push(T.commands.registerTextEditorCommand("git-blame.diffView.diffStat",async(n,a,c)=>{let d=e.getRef(),u=["diff","--numstat",d],m=await F.run(u,n.document.uri);if(!m)return;let l={files:0,plus:0,minus:0},p=[],f=[{iconPath:new T.ThemeIcon("go-to-file"),tooltip:"File"}],g=new RegExp(/^(\d+|-)\s+(\d+|-)\s+(.*)$/gm),w=m.matchAll(g);for(let k of w)if(k){let h=k[1],v=k[2],b=k[3],x=pe.basename(b),y=`+${h} -${v}	${pe.dirname(b)}`;l.files++,l.plus+=isNaN(Number(h))?0:Number(h),l.minus+=isNaN(Number(v))?0:Number(v),p.push({label:x,description:y,fsPath:b,buttons:f})}if(p.length===0)return;{let k=l.files!==1?"files":"file";k=`${l.files} ${k}`,p.push({label:k,description:`+${l.plus} -${l.minus}`})}let D=T.window.createQuickPick();D.show(),D.items=p,D.onDidAccept(()=>{let k=D.selectedItems[0];if(!k)return;let h=k.fsPath;if(!h)return;let v=P(n.document.uri);!v||(h=pe.join(v,h),Ei(T.Uri.parse(h),d))}),D.onDidTriggerItemButton(k=>{let h=k.item,v=P(n.document.uri);if(!v)return;let b=h.fsPath;if(!!b)switch(k.button.tooltip){case"File":{b=pe.join(v,b),T.workspace.openTextDocument(T.Uri.parse(b)).then(x=>T.window.showTextDocument(x).then(y=>{}));break}}}),D.onDidHide(()=>D.dispose())}));let o="git-blame.diff.storage.ref";t.subscriptions.push(T.commands.registerCommand("git-blame.diffView.setRef",async()=>{let n=e.getRef(),a=await de(t,{key:"diff.ref",title:"Ref?",placeholder:n});!a||(e.setRef(a),T.commands.executeCommand("git-blame.diffView.refresh",a),t.workspaceState.update(o,a))})),t.subscriptions.push(T.commands.registerCommand("git-blame.diff.getRef",()=>t.workspaceState.get(o)??"@^"));let r="git-blame.textDocumentContentProvider.raw";t.subscriptions.push(T.workspace.registerTextDocumentContentProvider(r,new class{provideTextDocumentContent(n){return JSON.parse(n.query)}})),t.subscriptions.push(T.workspace.registerTextDocumentContentProvider("git-blame.textDocumentContentProvider.openFsPathToline",new class{provideTextDocumentContent(n){let a=JSON.parse(n.query),c=T.Uri.file(a.fsPath),d=Number(a.line)-1;return T.commands.executeCommand("vscode.open",c).then(()=>{let u=T.window.activeTextEditor;if(!u)return;let m={lineNumber:d,by:"line",at:"top"};T.commands.executeCommand("revealLine",m);let l=u.document.lineAt(d).firstNonWhitespaceCharacterIndex,p=new T.Position(d,l);u.selection=new T.Selection(p,p)}),""}})),t.subscriptions.push(T.workspace.registerTextDocumentContentProvider("git-blame.gitAnywhere",new ot)),t.subscriptions.push(T.workspace.registerTextDocumentContentProvider("git-blame.textDocumentContentProvider.diffFsPathToline",new class{provideTextDocumentContent(n){let a=JSON.parse(n.query),c=Number(a.line)-1;c<=0&&(c=1);let d=T.Uri.file(a.fsPath),u=e.getRef(),m=d.with({scheme:"git-blame.gitAnywhere",path:d.fsPath,query:JSON.stringify({path:d.fsPath,ref:u})}),l=pe.basename(d.fsPath);return T.commands.executeCommand("vscode.diff",m,d,l).then(()=>{let p=T.window.activeTextEditor;if(!p)return;let f={lineNumber:c,by:"line",at:"top"};T.commands.executeCommand("revealLine",f);let g=p.document.lineAt(c).firstNonWhitespaceCharacterIndex,w=new T.Position(c,g);p.selection=new T.Selection(w,w)}),""}})),t.subscriptions.push(T.commands.registerTextEditorCommand("git-blame.diffView.diffAll",async n=>{let a=e.getRef(),c=n.document.uri,u=await Ne(c,["diff","-U0",a]),m=JSON.stringify(u),l=T.Uri.from({scheme:r,query:m,path:n.document.uri.fsPath}),p="all.diff";T.commands.executeCommand("vscode.open",l,{},p).then(()=>{let f=T.window.activeTextEditor?.document;!f||T.languages.setTextDocumentLanguage(f,"diff")})})),t.subscriptions.push(T.languages.registerDocumentLinkProvider({language:"diff",scheme:r},new At))}var ve=C(require("vscode"));var Ui=C(require("child_process")),ge=C(require("vscode"));var Ft=class extends ge.TreeItem{},nt=class{constructor(){this._onDidChangeTreeData=new ge.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.topLevelGitDir_="";this.commits_=[]}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{let o=this.editor_;if(!o){i(void 0);return}let r=o.document.uri,n=P(r);if(!n)return;this.topLevelGitDir_=n;let a;if(await this.process(r),!this.commits_)return null;let c=this.commits_.map(d=>{let u=new Ft(d.summary);u.description=d.date;let m=JSON.parse(d.right.query).ref;return u.tooltip=m,u.resourceUri=ge.Uri.parse(d.right.fsPath),u.command={command:"gitBlame.fileView.showPatch",title:"Diff",arguments:[d.left,d.right]},u.contextValue="commit",u.sha=new R(m),u});i(c)})}refresh(e){if(this.reset(),!e){this._onDidChangeTreeData.fire();return}this.editor_=e,this._onDidChangeTreeData.fire()}reset(){this.commits_=[],this.topLevelGitDir_="",this.editor_=void 0}async process(e){return new Promise((i,s)=>{let o=["log","--follow","--name-only","--format=%H%cs%s","--",`"${e.fsPath}"`],[r,n,a]=_(e,o),c=Ui.spawn(r,n,a),d="";c.on("error",u=>console.log("error",u)),c.on("exit",(u,m)=>{let l=(g,w)=>{let D=`${this.topLevelGitDir_}/${g}`;return ge.Uri.from({scheme:"git-blame.gitAnywhere",path:D,query:JSON.stringify({path:D,ref:w})})},p=new RegExp(/([0-9a-fA-F]{40})+([0-9-]{10})([^\n]+)\n\n([^\n]+)/g),f=d.matchAll(p);for(let g of f){let[w,D,k,h,v]=g,b=l(v,D),x=l(v,`${D}^`);this.commits_.push({left:x,right:b,summary:h,date:k})}i()}),c.stdout.on("data",u=>d+=u.toString())})}};var Os=require("path");function $i(t){let e=new nt,i=ve.window.createTreeView("gitBlameDocumentView",{treeDataProvider:e});t.subscriptions.push(ve.commands.registerCommand("gitBlame.fileView.refresh",()=>{!i.visible||e.refresh(ve.window.activeTextEditor)})),t.subscriptions.push(ve.commands.registerCommand("gitBlame.fileView.showPatch",(s,o)=>{let r=`${Os.basename(o.fsPath)} (diff)`;ve.commands.executeCommand("vscode.diff",s,o,r)}))}var O=C(require("vscode"));var Ai=C(require("child_process")),J=C(require("vscode"));var Rt=require("path"),Gt=class extends J.TreeItem{constructor(i,s,o,r,n,a){super({label:r});this.description=`${s} ${o}`,this.tooltip=`${this.description}

${r}

${n}
${i}`,this.contextValue="commit",a.length>0&&(this.collapsibleState=J.TreeItemCollapsibleState.Collapsed),this.sha=new R(i),this.date=s,this.summary=r,this.author=o,this.body=n,this.files=a}},Vt=class extends J.TreeItem{constructor(i,s,o){super({label:Rt.basename(i)});this.description=Rt.dirname(i),this.resourceUri=J.Uri.parse(Rt.join(s,i)),this.contextValue="file",this.sha=o,this.command={title:"Patch",command:"git-blame.treeView.showPatch",arguments:[this.resourceUri.fsPath,this.sha]}}},at=class{constructor(){this._onDidChangeTreeData=new J.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1;this.useReflog_=!1;this.maxCommitCount_=50}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.hasRefreshed_)return i([]);if(e)return i(e.files);this.getLog().then(o=>{i(o)})})}refresh(e){this.author_=e.author,this.ref_=e.ref,this.hasRefreshed_=!0,this._onDidChangeTreeData.fire()}async getLog(){return new Promise((e,i)=>{let s=J.window.activeTextEditor?.document.uri;if(!s)return e([]);let o=P(s);if(!o)return e([]);let n=[this.useReflog_?"reflog":"log","--format='|%H%cs%ae|%s|%b|'",`-n ${this.maxCommitCount_}`,"--name-only"];this.author_&&n.push(`--author=${this.author_}`),this.ref_&&n.push(this.ref_),n.push("--",s.fsPath);let[a,c,d]=_(s,n),u=Ai.spawn(a,c,d),m="";u.on("error",l=>{i()}),u.on("exit",(l,p)=>{let f=[],g=new RegExp(/\|([0-9a-fA-F]{40})([0-9-]{10})([^\|]+)\|([^\|]+)\|([^\|]*)\|([^\|]+)/gs),w=m.matchAll(g);if(!!w){for(let D of w){let[k,h,v,b,x,y,E]=D,A=E.trim().split(`
`).filter(U=>U!="").map(U=>new Vt(U,o,h)),L=new Gt(h,v,b,x,y,A);f.push(L)}e(f)}}),u.stdout.on("data",l=>m+=l.toString())})}getAuthor(){return this.author_}getRef(){return this.ref_}openLog(e,i){H({sha:e},i)}setMaxNumberOfCommits(e){this.maxCommitCount_=e}toggleUseReflog(){this.useReflog_=!this.useReflog_}};var Ns=require("path");function Ri(t){let e=new at,i=O.window.createTreeView("gitBlameFileView",{treeDataProvider:e});Fi(e),t.subscriptions.push(O.commands.registerCommand("git-blame.fileView.refresh",()=>{!i.visible||e.refresh({})})),t.subscriptions.push(O.commands.registerCommand("git-blame.fileView.setAuthor",()=>{O.window.showInputBox({title:"Author?",value:e.getAuthor()}).then(s=>{typeof s>"u"||e.refresh({author:s})})})),t.subscriptions.push(O.commands.registerCommand("git-blame.fileView.setRef",()=>{O.window.showInputBox({title:"Ref?",value:e.getRef()}).then(s=>{typeof s>"u"||e.refresh({ref:s})})})),t.subscriptions.push(O.commands.registerTextEditorCommand("git-blame.fileView.openLog",(s,o,r)=>{e.openLog(r.sha,s.document.uri)})),t.subscriptions.push(O.workspace.onDidChangeConfiguration(s=>{s.affectsConfiguration("git-blame.fileView.maxCommitCount")&&Fi(e)})),t.subscriptions.push(O.commands.registerCommand("git-blame.fileView.openArtifact",s=>{let o=s.resourceUri,r=s.sha,n=o.with({scheme:"git-blame.gitAnywhere",query:JSON.stringify({ref:r,path:o.fsPath})}),a=`${Ns.basename(n.fsPath)} ${r.slice(0,3)}`;O.commands.executeCommand("vscode.open",n,{},a)})),t.subscriptions.push(O.commands.registerCommand("git-blame.fileView.toggleReflog",()=>{e.toggleUseReflog()}))}function Fi(t){let e=O.workspace.getConfiguration("git-blame"),i="fileView.maxCommitCount",s=e.get(i)??50;t.setMaxNumberOfCommits(s)}var ue=C(require("vscode"));var Gi=C(require("child_process")),we=C(require("vscode"));var Bt=class extends we.TreeItem{constructor(i,s){super(i.summary);let o=JSON.parse(i.right.query).ref,r=i.left.fsPath.substring(s),n=i.right.fsPath.substring(s);this.tooltip=`${o}

${i.date}

${i.summary}

File: ${n}

Previous: ${r}`,this.description=i.date,this.resourceUri=we.Uri.parse(i.right.fsPath),this.command={command:"gitBlame.lineView.showPatch",title:"Diff",arguments:[i.left,i.right]},this.contextValue="git-blame.lineView.lineHistory.item",this.sha=new R(o)}},ct=class{constructor(){this._onDidChangeTreeData=new we.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.topLevelGitDir_="";this.commits_=[]}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{let o=this.editor_;if(!o){i(void 0);return}let r=this.line_,n=this.ref_,a=o.document.uri;if(a.scheme==="untitled"){i(void 0);return}let c=P(a);if(!c){i(void 0);return}if(this.topLevelGitDir_=c,await this.process(a,n,r),!this.commits_)return i(void 0),null;let d=this.topLevelGitDir_.length+1,u=this.commits_.map(m=>new Bt(m,d));i(u)})}refresh(e,i,s){if(this.reset(),!e||i===-1){this._onDidChangeTreeData.fire();return}this.editor_=e,this.line_=i,this.ref_=s,this._onDidChangeTreeData.fire()}reset(){this.commits_=[],this.topLevelGitDir_="",this.editor_=void 0,this.line_=void 0,this.ref_=void 0}async process(e,i,s){return new Promise((o,r)=>{let n=["log","--format=%H%cs%s","-L",`${s},+1:"${e.fsPath}"`],[a,c,d]=_(e,n),u="",m=Gi.spawn(a,c,d);m.on("error",l=>{console.log("error",l),r()}),m.on("exit",(l,p)=>{let f=(D,k,h)=>{let v="";return D!=="/dev/null"?v=`${this.topLevelGitDir_}/${D.slice(2)}`:v=h||"",we.Uri.from({scheme:"git-blame.gitAnywhere",path:v,query:JSON.stringify({path:v,ref:k,topLevelGitDir:this.topLevelGitDir_})})},g=new RegExp(/([0-9a-fA-F]{40})+([0-9-]{10})([^\n]+)\n+diff[^\n]+\n--- ([^\n]+)\n\+\+\+ ([^\n]+)/g),w=u.matchAll(g);for(let D of w){let[k,h,v,b,x,y]=D,E=f(y,h),A=f(x,`${h}^`,E.fsPath);this.commits_.push({left:A,right:E,summary:b,date:v})}o()}),m.stdout.on("data",l=>u+=l.toString())})}};var js=require("path");function Vi(t){let e=new ct,i=ue.window.createTreeView("gitBlameLineView",{treeDataProvider:e});t.subscriptions.push(ue.commands.registerCommand("gitBlame.lineView.refresh",()=>{if(!i.visible)return;let s=ue.window.activeTextEditor,o=s?s.selection.active.line+1:-1;ue.commands.executeCommand("gitBlame.getShaForCurrentLine").then(r=>{e.refresh(s,o,r)})})),t.subscriptions.push(ue.commands.registerCommand("gitBlame.lineView.showPatch",(s,o)=>{let r=`${js.basename(o.fsPath)} (diff)`;ue.commands.executeCommand("vscode.diff",s,o,r)}))}var G=C(require("vscode"));var Bi=C(require("child_process")),W=C(require("vscode"));var Ot=require("path"),Qt=class extends W.TreeItem{constructor(i,s,o,r,n,a){super({label:r});this.description=`${s} ${o}`,this.tooltip=`${this.description}

${r}

${n}
${i}`,this.contextValue="commit",a.length>0&&(this.collapsibleState=W.TreeItemCollapsibleState.Collapsed),this.id=i,this.sha=new R(i),this.date=s,this.summary=r,this.author=o,this.body=n,this.files=a}},Nt=class extends W.TreeItem{constructor(i,s,o){super({label:Ot.basename(i)});this.description=Ot.dirname(i),this.resourceUri=W.Uri.parse(Ot.join(s,i)),this.contextValue="file",this.sha=o,this.command={title:"Patch",command:"git-blame.treeView.showPatch",arguments:[this.resourceUri.fsPath,this.sha]}}},mt=class{constructor(){this._onDidChangeTreeData=new W.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1;this.useReflog_=!1;this.maxCommitCount_=50}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.hasRefreshed_)return i([]);if(e)return i(e.files);this.getLog().then(o=>{i(o)})})}refresh(e){this.author_=e.author,this.ref_=e.ref,this.hasRefreshed_=!0,this._onDidChangeTreeData.fire()}async getLog(){return new Promise((e,i)=>{let s=W.window.activeTextEditor?.document.uri;if(!s)return e([]);let o=P(s);if(this.topLevelGitDir_=o,!o)return e([]);let n=[this.useReflog_?"reflog":"log","--format='|%H%cs%an <%ae>|%s|%b|'",`-n ${this.maxCommitCount_}`,"--name-only"];this.author_&&n.push(`--author=${this.author_}`),this.ref_&&n.push(this.ref_);let[a,c,d]=_(s,n),u=Bi.spawn(a,c,d),m="";u.on("error",l=>{i()}),u.on("exit",(l,p)=>{let f=[],g=new RegExp(/\|([0-9a-fA-F]{40})([0-9-]{10})([^\|]+)\|([^\|]+)\|([^\|]*)\|([^\|]+)/gs),w=m.matchAll(g);if(!!w){for(let D of w){let[k,h,v,b,x,y,E]=D,A=E.trim().split(`
`).filter(U=>U!="").map(U=>new Nt(U,o,h)),L=new Qt(h,v,b,x,y,A);f.push(L)}e(f)}}),u.stdout.on("data",l=>m+=l.toString())})}getAuthor(){return this.author_}getRef(){return this.ref_}openLog(e,i){H({sha:e},i)}setMaxNumberOfCommits(e){this.maxCommitCount_=e}toggleUseReflog(){this.useReflog_=!this.useReflog_}getTopLevelGitDir(){return this.topLevelGitDir_}};var Js=require("path");function Qi(t){let e=new mt,i=G.window.createTreeView("gitBlameLogView",{treeDataProvider:e});Oi(e),t.subscriptions.push(G.commands.registerCommand("git-blame.logView.refresh",()=>{!i.visible||e.refresh({})})),t.subscriptions.push(G.commands.registerCommand("git-blame.logView.setAuthor",()=>{G.window.showInputBox({title:"Author?",value:e.getAuthor()}).then(s=>{typeof s>"u"||e.refresh({author:s})})})),t.subscriptions.push(G.commands.registerCommand("git-blame.logView.setRef",()=>{G.window.showInputBox({title:"Ref?",value:e.getRef()}).then(s=>{typeof s>"u"||e.refresh({ref:s})})})),t.subscriptions.push(G.workspace.onDidChangeConfiguration(s=>{s.affectsConfiguration("git-blame.logView.maxCommitCount")&&Oi(e)})),t.subscriptions.push(G.commands.registerCommand("git-blame.logView.toggleReflog",()=>e.toggleUseReflog())),t.subscriptions.push(G.commands.registerCommand("git-blame.logView.amend",async s=>{let o=e.getTopLevelGitDir(),r=G.Uri.parse(Js.join(o,"stub")),n=await F.run(["name-rev","--name-only","@"],r);(n==="undefined"||typeof n>"u")&&(n="@");let a=s.sha.getSha();if(!a)return;let c=await G.window.showInputBox({value:s.summary});!c||c===s.summary||(await F.run(["checkout",a],r,!0),await F.run(["commit","--amend","--reset-author","-m",`"${c}"`,"-m",`"${s.body}"`,"-m",`"Pre-amend author: ${s.author} ${s.date}."`],r,!0),n!=="@"&&await F.run(["rebase","--onto","@",a,n],r,!0),e.refresh({}))}))}function Oi(t){let e=G.workspace.getConfiguration("git-blame"),i="logFilesView.maxCommitCount",s=e.get(i)??50;t.setMaxNumberOfCommits(s)}var Ge=C(require("vscode"));var ut=C(require("vscode"));var dt=class{constructor(){this._onDidChangeTreeData=new ut.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.commit_)return i([]);let o=this.commit_,r=[],n=`${o.sha}
${o.author}
${ne(o.date)}

${o.summary}
`,a=new ut.ThemeIcon("git-branch");return r?.push({label:o.summary,tooltip:n,iconPath:a}),i(r)})}refresh(e){this.commit_=e,this._onDidChangeTreeData.fire()}};function Ni(t){let e=new dt,i=Ge.window.createTreeView("git-blame.treeViews.message",{treeDataProvider:e});Ge.commands.executeCommand("git-blame.commands.onShaForCurrentLine",async s=>{if(!i.visible||!s||s.length===0)return;let o=s[0],r=await Ge.commands.executeCommand("git-blame.commands.getAllCommits"),n;for(let[a,c]of r)if(a===o){n=c;break}e.refresh(n)})}var ke=C(require("vscode"));var Y=C(require("vscode")),Mi=C(require("child_process"));var qi=require("path"),Mt=class extends Y.TreeItem{constructor(i,s){super(i);this.contextValue="commit",this.sha=new R(s),this.collapsibleState=Y.TreeItemCollapsibleState.Collapsed}},qt=class extends Y.TreeItem{constructor(i,s,o){super(i);this.file=i,this.resourceUri=Y.Uri.parse(qi.join(s,this.file)),this.contextValue="file",this.sha=o,this.command={title:"Patch",command:"git-blame.treeView.showPatch",arguments:[this.resourceUri.fsPath,this.sha]}}};function Ks(t){let e=["log",'--format="%H%ae %cs%s"'];if(t.sha)return e.push(t.sha,"-1"),e;if(t.author&&e.push(`--author=${t.author}`),t.message&&e.push(`--grep=${t.message}`),t.patch&&e.push(`-S ${t.patch}`),t.file){let i=t.file;!i.startsWith('"')&&!i.endsWith('"')&&(i=`"${i}"`),e.push(`-- ${t.file}`)}return e}function Zs(t){let e={};return t.split(" ").forEach(i=>{if(i.length<2||i[1]!=":")return;let s=i.slice(0,1),o=i.slice(2);switch(s){case"a":{e.author=o;break}case"m":{e.message=o;break}case"f":{e.file=o;break}case"p":{e.patch=o;break}case"s":{e.sha=o;break}}}),e}var lt=class{constructor(){this._onDidChangeTreeData=new Y.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.hasRefreshed_)return i([]);if(e){let o=this.topLevelGitDirStubUri_;if(!o)return i([]);let n=e.sha?.getSha();if(!n)return i([]);let a=await F.run(["log","-1","--name-only",'--format=""',n],o),c=this.topLevelGitDir_;if(!c)return i([]);let d=a?.split(`
`).filter(u=>u!=="").map(u=>new qt(u,c,n));return i(d)}return i(this.items_)})}async process(e,i){this.process_&&!this.process_.killed&&this.process_.kill();let s=Zs(i),o=Ks(s),r=P(e);if(!r)return;this.topLevelGitDir_=r;let n=Y.Uri.parse(qi.join(r,"stub"));this.topLevelGitDirStubUri_=n;let[a,c,d]=_(n,o);this.process_=Mi.spawn(a,c,d),this.process_.on("error",p=>console.log("error",p));let u=[],m=new RegExp(/^([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})(.*)$/gm),l=()=>{let p=[],f=u.join("").matchAll(m);for(let g of f){let[w,D,k,h,v]=g,b=new Mt(v,D);b.description=`${h} ${k}`,p.push(b)}return p};this.process_.stdout.on("data",p=>{u.push(p.toString()),this.items_=l(),this._onDidChangeTreeData.fire()}),this.process_.on("exit",(p,f)=>{u.length!==0&&(this.items_=l(),this._onDidChangeTreeData.fire())})}refresh(e,i){this.hasRefreshed_=!0,this.process(i,e)}};async function ft(t){return new Promise((e,i)=>{e(de(t,{key:"search",title:"Query?",placeholder:"a:author m:message f:file p:patch s:sha"}))})}var Ve=C(require("vscode")),Ys=require("path"),ye=class{static showDiff(e,i){let s="git-blame.gitAnywhere",o=Ve.Uri.from({path:e.fsPath.trim(),query:JSON.stringify({path:e.fsPath.trim(),ref:e.sha.trim()}),scheme:s}),r=Ve.Uri.from({path:i.fsPath.trim(),query:JSON.stringify({path:i.fsPath.trim(),ref:i.sha.trim()}),scheme:s}),n=`${Ys.basename(r.fsPath)} (diff)`;Ve.commands.executeCommand("vscode.diff",o,r,n)}};var ji=require("path");async function Xs(t,e,i){let s=await ft(e);!s||i.refresh(s,t.document.uri)}async function eo(t){let e=P(t.document.uri);if(!e)return;let i=await ke.window.showInputBox({placeHolder:"<ref:old_path> <ref:new_path>",title:"Refs"});if(!i)return;let s=i.match(/([^\:]+):([^\s]+) ([^\:]+):([^\:]+)/);if(!s||s.length!==5)return;let o={sha:s[1],fsPath:ji.join(e,s[2])},r={sha:s[3],fsPath:ji.join(e,s[4])};ye.showDiff(o,r)}function Hi(t){let e=new lt,i=ke.window.createTreeView("git-blame.views.search",{treeDataProvider:e});t.subscriptions.push(ke.commands.registerTextEditorCommand("git-blame.views.search.query",async s=>{Xs(s,t,e)})),t.subscriptions.push(ke.commands.registerTextEditorCommand("git-blame.views.search.compareFiles",async s=>{eo(s)}))}function Ji(t){Di(t),_i(t),Li(t),$i(t),Ri(t),Vi(t),Qi(t),Ni(t),Hi(t),t.subscriptions.push(z.commands.registerCommand("git-blame.treeView.openResourceUri",e=>{z.commands.executeCommand("vscode.open",e.resourceUri)})),t.subscriptions.push(z.commands.registerCommand("git-blame.treeView.copyLabel",e=>{z.env.clipboard.writeText(e.label)})),t.subscriptions.push(z.commands.registerCommand("git-blame.treeView.copyDescription",e=>{z.env.clipboard.writeText(e.description)})),z.commands.registerTextEditorCommand("git-blame.treeView.openLog",(e,i,s)=>{let o=s.sha.getSha();!o||H({sha:o},e.document.uri,!1)}),t.subscriptions.push(z.commands.registerCommand("git-blame.treeView.showPatch",(e,i)=>{xe.showPatch(e,i)})),t.subscriptions.push(z.commands.registerCommand("git-blame.treeView.showDiff",(e,i)=>{ye.showDiff(e,i)}))}var X=C(require("vscode"));var so=require("fs"),jt=new Set,Be=new Map,_e=new Map;function Wi(t){!t||jt.has(t.fsPath)||Ki(t)&&jt.add(t.fsPath)}function oo(t){jt.delete(t.fsPath);let e=P(t);if(!e||!_e.has(e))return;let i=_e.get(e);!i||(i.delete(t.fsPath),i.size===0&&(Be.get(e)?.close(),Be.delete(e),_e.delete(e)))}function zi(t){t.subscriptions.push(X.workspace.onDidOpenTextDocument(e=>Wi(e.uri))),t.subscriptions.push(X.window.onDidChangeActiveTextEditor(e=>Wi(e?.document.uri))),t.subscriptions.push(X.workspace.onDidCloseTextDocument(e=>oo(e.uri)))}function Ki(t){let e;if(t)e=t;else{if(X.window.activeTextEditor===void 0)return!1;e=X.window.activeTextEditor.document.uri}if(e.scheme!=="file")return!1;let i=P(e);return i?(Be.has(i)&&Be.get(i)?.close(),Be.set(i,so.watch(`${i}/.git/HEAD`,{persistent:!1},ro)),_e.has(i)||_e.set(i,new Set),_e.get(i).add(e.fsPath),!0):!1}function ro(t,e){Ki();let i=N.prefix;X.commands.executeCommand(`${i}.blamer.clearData`),X.commands.executeCommand(`${i}.blamer.updateStatusBar`)}var be=C(require("vscode"));var ht=C(require("vscode")),pt=C(require("child_process"));var Se;async function Zi(t,e,i,s,o){return new Promise((r,n)=>{let a=[...e,"-1",`--skip=${o}`],[c,d,u]=_(i,a);Se=pt.spawn(c,d,u),Se.on("error",f=>console.log("error",f));let m="",l=new RegExp(/([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})([^\n]+)(.*)/s),p=()=>{let f=[],g=m.match(l);if(!g)return f;let[w,D,k,h,v,b]=Array.from(g),x=v,y=`${h} ${k} ${b}`;return f.push({label:x,sha:D,description:y}),[...s,...f]};Se.stdout.on("data",f=>{m+=f.toLocaleString();let g=p();!g||g.length===0||(t.items=g)}),Se.on("exit",async(f,g)=>{if(!m&&m!=""){r();return}let w=p();if(!w||w.length===0){r();return}t.items=w,await Zi(t,e,i,w,o+1),r()})})}async function Yi(t){let e=ht.window.createQuickPick();e.busy=!0,e.show(),e.keepScrollPosition=!0;let i=t.document.uri;if(!P(i))return;let o=t.selection.active.line+1,r=t.document.uri.fsPath,n="";i.query&&(n=JSON.parse(i.query).ref);let a=await ht.commands.executeCommand("gitBlame.getShaForCurrentLine"),c=[],d=0;if(a){let m=["log",a,"-1",'--format="%ae %cs%s"'],[l,p,f]=_(i,m),w=pt.spawnSync(l,p,f).stdout.match(/([^\s]+) (\d{4}\-\d{2}\-\d{2})([^\n]+)/);if(w){let[D,k,h,v]=w;c.push({label:v,description:`${h} ${k}`,sha:a}),e.items=c,d++}}let u=["log",n,"-L",`${o},+1:"${r}"`,'--format="%H%ae %cs%s"'];Zi(e,u,i,c,d).then(()=>{if(e.items.length===0){e.hide();return}e.busy=!1}),e.onDidAccept(()=>{let m=e.selectedItems[0].sha;!m||ce(t,m)}),e.onDidHide(()=>{e.dispose(),Se.killed||Se.kill()})}var Xi=C(require("vscode")),es=C(require("child_process"));var Ie;async function ts(t,e,i,s,o){return new Promise((r,n)=>{let a=[...e,`--skip=${o}`,"-1","--",`"${i.fsPath}"`],[c,d,u]=_(i,a);Ie=es.spawn(c,d,u),Ie.on("error",f=>console.log("error",f));let m="",l=new RegExp(/^([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})(.*)/s),p=()=>{let f=[],g=m.match(l);if(!g)return f;let[w,D,k,h,v]=Array.from(g),b=v,x=`${h} ${k}`;return f.push({label:b,sha:D,description:x}),[...s,...f]};Ie.stdout.on("data",f=>{m+=f.toLocaleString();let g=p();!g||g.length===0||(t.items=g)}),Ie.on("exit",async(f,g)=>{if(!m&&m!=""){r();return}let w=p();if(!w||w.length===0){r();return}t.items=w,await ts(t,e,i,w,o+1),r()})})}async function is(t){let e=Xi.window.createQuickPick();if(e.busy=!0,e.show(),e.keepScrollPosition=!0,!P(t.document.uri))return;let s="";t.document.uri.query&&(s=JSON.parse(t.document.uri.query).ref),ts(e,["log",s,'--format="%H%ae %cs%s"'],t.document.uri,[],0).then(()=>{if(e.items.length===0){e.hide();return}e.busy=!1}),e.onDidAccept(()=>{let r=e.selectedItems[0].sha;!r||ce(t,r)}),e.onDidHide(()=>{e.dispose(),Ie.killed||Ie.kill()})}var gt=C(require("vscode")),ss=C(require("child_process"));var ao=require("path");function co(t,e){let i=[],s=t.matchAll(e);for(let o of s){let[r,n,a,c,d]=o,u=d,m=`${c} ${a}`;i.push({label:u,sha:n,description:m})}return i}async function os(t,e){let i=gt.window.createQuickPick();i.busy=!0,i.show(),i.keepScrollPosition=!0;let s=new RegExp(/^([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})(.*)$/gm),o=P(e.document.uri);if(!o)return;let r=gt.Uri.parse(ao.join(o,"thisStubIsNeeded")),n=["reflog",'--format="%H%ae %cs%s"'],[a,c,d]=_(r,n),u=ss.spawn(a,c,d);u.on("error",l=>console.log("error",l));let m="";u.stdout.on("data",l=>{m+=l.toLocaleString(),i.items=co(m,s)}),u.on("exit",(l,p)=>{if(m.length===0){i.hide();return}i.busy=!1}),i.onDidAccept(()=>{let l=i.selectedItems[0].sha;!l||ce(e,l)}),i.onDidHide(()=>{i.dispose(),u.killed||u.kill()})}var vt=C(require("vscode")),rs=C(require("child_process"));var mo=require("path");function uo(t){let e=["log",'--format="%H%ae %cs%s"'];if(t.sha)return e.push(t.sha,"-1"),e;if(t.author&&e.push(`--author=${t.author}`),t.message&&e.push(`--grep=${t.message}`),t.patch&&e.push(`-S ${t.patch}`),t.file){let i=t.file;!i.startsWith('"')&&!i.endsWith('"')&&(i=`"${i}"`),e.push(`-- ${t.file}`)}return e}function lo(t){let e={};return t.split(" ").forEach(i=>{if(i.length<2||i[1]!=":")return;let s=i.slice(0,1),o=i.slice(2);switch(s){case"a":{e.author=o;break}case"m":{e.message=o;break}case"f":{e.file=o;break}case"p":{e.patch=o;break}case"s":{e.sha=o;break}}}),e}async function ns(t,e,i){let s=vt.window.createQuickPick();s.busy=!0,s.show(),s.keepScrollPosition=!0;let o=lo(i),r=P(e.document.uri);if(!r)return;let n=vt.Uri.parse(mo.join(r,"thisStubIsNeeded")),a=uo(o),[c,d,u]=_(n,a),m=rs.spawn(c,d,u);m.on("error",g=>console.log("error",g));let l="",p=new RegExp(/^([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})(.*)$/gm),f=()=>{let g=[],w=l.matchAll(p);for(let D of w){let[k,h,v,b,x]=D,y=x,E=`${b} ${v}`;g.push({label:y,sha:h,description:E})}return g};m.stdout.on("data",g=>{l+=g.toLocaleString(),s.items=f()}),m.on("exit",(g,w)=>{if(s.items=f(),l.length===0){s.hide();return}s.busy=!1}),s.onDidAccept(()=>{let g=s.selectedItems[0].sha;!g||ce(e,g)}),s.onDidHide(()=>{s.dispose(),m.killed||m.kill()})}function as(t){t.subscriptions.push(be.commands.registerTextEditorCommand("git-blame.command.search",async e=>{let i=await ft(t);!i||ns(t,e,i)})),t.subscriptions.push(be.commands.registerTextEditorCommand("git-blame.command.lineHistory",e=>Yi(e))),t.subscriptions.push(be.commands.registerTextEditorCommand("git-blame.command.fileHistory",e=>is(e))),t.subscriptions.push(be.workspace.registerTextDocumentContentProvider("git-blame.provider.fullPatch",new De)),t.subscriptions.push(be.commands.registerTextEditorCommand("git-blame.command.reflog",e=>os(t,e)))}var V=C(require("vscode"));var Wt=[],zt,cs,ms,Ht;function ho(t){(t.affectsConfiguration("git-blame.config.showBlameInline")||t.affectsConfiguration("git-blame.config.inlineBlameStartColumn")||t.affectsConfiguration("git-blame.config.inlineBlameHoverMessage"))&&ds()}function ds(){let t=V.workspace.getConfiguration("git-blame");zt=t.get("config.showBlameInline")??!0,zt||Kt();let e=Number(t.get("config.inlineBlameStartColumn"));cs=isNaN(e)?80:e,ms=t.get("config.inlineBlameHoverMessage")||!1}function po(t){if(!zt)return;let e=V.window.activeTextEditor;!e||e.document.isDirty||!go(e)||Co(e,t)}function go(t){let e;return t.document.languageId==="markdown"?(e=V.workspace.getConfiguration("[markdown]"),e.editor.wordWrap==="off"):(e=V.workspace.getConfiguration("editor"),e.wordWrap==="off")}function us(t){ds(),t.subscriptions.push(V.workspace.onDidChangeConfiguration(e=>ho(e))),V.commands.executeCommand("git-blame.commands.onShaListingIndexedByLine",e=>po(e))}function Kt(){Wt.forEach(t=>t.dispose()),Wt.length=0}function vo(t,e){let i=[],s=0;for(let o=0;o<t.length;o++)switch(t.charAt(o)){case`
`:{i.push(s),s=0;break}case"	":{s+=e;break}default:{s++;break}}return i.push(s),i}function wo(t){let i=new Map;for(let[r,n]of t){if(!n)return;if(i.has(r))continue;let a=xt(n.date);if(!a)return;let c=n.mail,d=c?.slice(c.indexOf("<")+1,c.indexOf(">"));i.set(n.sha,{commit:n,id:-1,date:a,email:d})}let s=new Map([...i.entries()].sort((r,n)=>r[1].date.valueOf()-n[1].date.valueOf())),o=1;for(let[r,n]of s)n.id=o,o++;return s}var bo="\u2002";function Jt(t,e){return bo.repeat(t-e+1)}async function Co(t,e){Kt();let i=await V.commands.executeCommand("git-blame.commands.getAllCommits"),s=wo(i);if(!s||s.size===0)return;let o=t.options.tabSize,r=vo(t.document.getText(),o),n=Math.max(cs,Math.max(...r)),a="",c="#696969",d="0".repeat(40),u=`${s.size}`.length,m=0;for(let[l,p]of s){let f=p.commit.author?.length;!f||f>m&&(m=f)}for(let l=0;l<e.length;l++){if(e[l]===a)continue;a=e[l];let p=r[l],f=Jt(n,p),g=new V.Position(l,p),w=new V.Range(g,g),D=e[l],k=s.get(D);if(!k)return;let{summary:h,author:v}=k.commit,b=[{range:w}];if(ms){let B=k.email;b=[{range:w,hoverMessage:B}]}let x=Jt(u,`${k.id}`.length),y=`#${k.id}${x}`,E=Jt(m,v?.length??0),A=Tt(k.date),U=[f,y,A,v,E,D!==d?h:void 0].join(""),j=V.window.createTextEditorDecorationType({after:{contentText:U,color:c}});Wt.push(j),t.setDecorations(j,b)}Ht=V.workspace.onDidChangeTextDocument(l=>{Ht?.dispose(),Ht=void 0,Kt()})}var ee=C(require("vscode"));var K=C(require("vscode"));async function ls(t,e,i){return new Promise((s,o)=>{let r=t.getSha();if(!r)return s(void 0);let n=["log","--format=''","--name-only",r,"-1"];s(F.run(n,i))})}var Zt=require("path"),Yt=class extends K.TreeItem{constructor(i){super({label:""});this.contextValue="commit",i.length>0&&(this.collapsibleState=K.TreeItemCollapsibleState.Collapsed),this.files=i}},Xt=class extends K.TreeItem{constructor(i,s,o){super({label:Zt.basename(i)});this.description=Zt.dirname(i),this.resourceUri=K.Uri.parse(Zt.join(s,i)),this.sha=new R(o),this.command={title:"Patch",command:"git-blame.treeView.showPatch",arguments:[this.resourceUri.fsPath,this.sha.getSha()]},this.contextValue="file"}},ei=class extends K.TreeItem{constructor(i,s){let o=i.commit,r=o.summary??"";super({label:r});this.date=ne(o.date),this.author=o.author?.trim(),this.description=`${this.date} ${this.author}`,this.sha=new R(o.sha),this.contextValue="commit",this.collapsibleState=K.TreeItemCollapsibleState.Collapsed}};async function Do(t,e,i){return new Promise(async(s,o)=>{let r=await ls(t,1,i);if(!r)return s(void 0);let n=new RegExp(/(.+)/s),a=r.match(n);if(!a)return s(void 0);let c=P(i);if(!c)return s(void 0);let d=t.getSha();if(!d)return;let[u,m]=a,l=m.trim().split(`
`).filter(f=>f!="").map(f=>new Xt(f,c,d)),p=new Yt(l);s(p)})}var wt=class{constructor(){this.onDidChangeTreeData_=new K.EventEmitter;this.onDidChangeTreeData=this.onDidChangeTreeData_.event;this.map_=new Map}getTreeItem(e){return e}getChildren(e){let i=this.uri_;if(!i)return[];if(e){let o=e;return!o.sha||!this.uri_?[]:Do(o.sha,1,this.uri_).then(n=>n?.files)}let s=[];for(let[o,r]of this.map_)s.push(new ei(r,i));return s}getParent(e){return{}}resolveTreeItem(e,i,s){}refresh(e,i){this.map_=e,this.onDidChangeTreeData_.fire(),this.uri_=i}};var ti;function fs(t){let e=new wt,i=ee.window.createTreeView("gitBlameVisibleCommitsView",{treeDataProvider:e});ee.commands.executeCommand("git-blame.commands.onAllShasForFile",s=>{let o=ee.window.activeTextEditor;o?.document.isDirty||!i.visible||Po(s,o?.document?.uri)}),ee.commands.registerCommand("git-blame.commands.toOutputPanel",(s,o)=>{e.refresh(s,o)})}async function Po(t,e){let i=await ee.commands.executeCommand("git-blame.commands.getAllCommits"),s=new Map;for(let r=0;r<t.length;r++){let n=t[r],a=i.get(n);if(!a)return;n!=="0".repeat(40)&&s.set(n,{commit:a})}let o=new Map([...s.entries()].sort((r,n)=>(r[1].commit.date??"").localeCompare(n[1].commit.date??"")).reverse());ee.commands.executeCommand("git-blame.commands.toOutputPanel",o,e),ti=ee.window.onDidChangeVisibleTextEditors(r=>{ti?.dispose(),ti=void 0,ee.commands.executeCommand("git-blame.commands.toOutputPanel",[])})}var re=C(require("vscode"));var ko=require("path");function hs(t){t.subscriptions.push(re.commands.registerCommand("git-blame.commands.getTopLevelGitDir",i=>P(i)));let e=re.window.createOutputChannel("Git Blame");t.subscriptions.push(re.commands.registerCommand("git-blame.commands.appendLineToOutputChannel",i=>e.appendLine(i))),t.subscriptions.push(re.commands.registerCommand("git-blame.commands.getQuickPickWithHistory",i=>de(t,{key:i.key,title:i.title,placeholder:i.placeholder}))),t.subscriptions.push(re.commands.registerTextEditorCommand("git-blame.commands.prevPatch",async i=>{let s=i.document.uri,o="";if(s.query){let u=JSON.parse(s.query);u.ref&&(o=`${u.ref}^`)}let r=P(i.document.uri);if(!r)return;let n=s.fsPath.substring(r.length+1),a=re.Uri.parse(ko.join(r,"stub")),c=await F.run(["log",o,"-1","--follow","--name-only",'--format="%H"',"--",n],a),d;c&&([d,n]=c.split(`

`),ae(r,s,d.trim(),n.trim(),"Patch"))}))}var ps=C(require("vscode"));async function ii(){let t=await ps.window.showInputBox({title:"Ref?",placeHolder:"<ref>[:<path>]"});if(!t)return[];let e=t.match("([^:]*)(?::([^:]*))?");if(!e||e.length!==3)return[];let i=e[1],s=e[2];return s?[i,s]:[i]}var oi=class{equals(e,i){return this.file==e&&this.line==i}set(e,i){this.file=e,this.line=i}};function si(){return!(!N.showStatusBar||!Le("showStatusBar"))}function So(t){let e=t.extension.id,i="solomonkinard";e.startsWith(i)&&(e=e.slice(i.length+1)),N.prefix=e;let s=new oi,o="git-blame.statusClick";t.subscriptions.push(S.commands.registerTextEditorCommand(o,m=>yt(m))),t.subscriptions.push(S.commands.registerTextEditorCommand("git-blame.editorContext.log",m=>yt(m))),t.subscriptions.push(S.commands.registerTextEditorCommand("git-blame.editorContext.patch",m=>S.commands.executeCommand("git-blame.commands.showPatch"))),t.subscriptions.push(S.commands.registerTextEditorCommand("git-blame.editorContext.diff",async m=>{let[l,p]=await ii();if(!l)return;let f=m.document.uri,g=P(m.document.uri);if(!g)return;let w;p?w=p:w=f.fsPath.substring(g.length+1),ae(g,f,l,w,"Diff")}));let r=S.window.createStatusBarItem(S.StatusBarAlignment.Right);r.command=o,t.subscriptions.push(r),r.show(),t.subscriptions.push(S.workspace.onDidChangeConfiguration(m=>{m.affectsConfiguration("git-blame.showStatusBar")&&(si()?r.show():r.hide())})),t.subscriptions.push(S.commands.registerCommand(N.prefix+".setStatus",(m,l)=>{!si()||(r.text=m,r.tooltip=l)}));let n=m=>{!m||!si()||(r.text="",pi(m))};t.subscriptions.push(S.window.onDidChangeTextEditorSelection(m=>{let p=m.textEditor.document.uri,f=m.textEditor.selection.active.line;s.equals(p,f)||(s.set(p,f),n(m.textEditor))}));let a=m=>{let l=S.window.activeTextEditor;if(!l){r.text="";return}m(l)};t.subscriptions.push(S.workspace.onDidCloseTextDocument(m=>{a(l=>{})}));let c=1e3,d;t.subscriptions.push(S.workspace.onDidChangeTextDocument(m=>{d&&(clearTimeout(d),d=void 0),d=setTimeout(()=>a(l=>n(l)),c)})),t.subscriptions.push(S.window.onDidChangeActiveTextEditor(m=>{a(l=>n(l))})),t.subscriptions.push(S.workspace.onDidSaveTextDocument(m=>{a(l=>{Ke(),n(l)})})),a(m=>{Ke(),n(m)}),t.subscriptions.push(S.workspace.registerTextDocumentContentProvider(`${e}.gitDiff`,new De)),t.subscriptions.push(S.workspace.registerTextDocumentContentProvider(`${e}.diffWorkingTree`,new Ye)),t.subscriptions.push(S.commands.registerTextEditorCommand(`${e}.gitDiff.next`,m=>{Ci(m)})),t.subscriptions.push(S.commands.registerTextEditorCommand(`${e}.gitDiff.prev`,m=>{Ti(m)})),t.subscriptions.push(S.commands.registerCommand("gitBlame.getShaForCurrentLine",()=>{let m=S.window.activeTextEditor;if(!!m)return Pt(m)})),Ji(t);let u=m=>{let l=Pt(m);!l||He(l)};t.subscriptions.push(S.commands.registerTextEditorCommand(`${e}.OpenCommitOnTheWeb`,u)),t.subscriptions.push(S.commands.registerTextEditorCommand("git-blame.editorContext.web",u)),t.subscriptions.push(S.commands.registerCommand(`${e}.blamer.clearData`,()=>Ke())),t.subscriptions.push(S.commands.registerCommand(`${e}.blamer.updateStatusBar`,()=>a(m=>{}))),zi(t),as(t),us(t),fs(t),hs(t),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.onShaForCurrentLine",m=>Ze("onShaForCurrentLine",m))),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.onAllShasForFile",m=>Ze("onAllShasForFile",m))),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.onShaListingIndexedByLine",m=>Ze("onShaListingIndexedByLine",m))),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.getAllCommits",()=>bi())),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.getAllShasForFile",()=>wi())),t.subscriptions.push(S.commands.registerTextEditorCommand("git-blame.commands.showPatch",async m=>{let[l,p]=await ii();if(!l)return;let f=m.document.uri,g=P(m.document.uri);if(!g)return;let w;p?w=p:w=f.fsPath.substring(g.length+1),ae(g,f,l,w,"Patch")}))}function Io(){}0&&(module.exports={activate,deactivate});
